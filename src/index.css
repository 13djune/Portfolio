@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Bit';
  src: url('./assets/fonts/PPNeueBit-Bold.otf');
}
@font-face {
  font-family: 'Daydream';
  src: url('./assets/fonts/Daydream.ttf');
}

:root {
    --text: #062016;
    --text-inverse: #e1f9f0;
    --background: #f7fdfb;
    --primary: #3ed9a6;
    --secondary: #9e99f8;
    --accent: #3fe2f7;
  --hoveraccent: #3fe2f754;
  --primary-hover: #6ef1c192;
  --secondary-hover: #b3b1fc53;
  
    --primary-gradient-start: #9d8ee5;
    --primary-gradient-end: #663dd6;
  }
.dark {

  --text: #e1f9f0;
  --text-inverse: #062016;
  --background: #05140f;
  --primary: #26c08c;
  --secondary: #6e3bfc;
  --accent: #08aabf;
  --hoveraccent: #3fe2f754;
  --primary-hover: #3ed9a58e;
  --secondary-hover: #9e99f855;
}

/* Oculta el cursor nativo para que solo se vea el personalizado */

body {
  background-color: var(--background) ;
  color: var(--text);
  cursor: none !important;

}
.dark-mode body {
  background-color: var(--background-dark);
  color: var(--text-dark);
}
code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
h1,h2,h3{
  @apply
  font-daydream
}
p{
 @apply
 font-bit
}
.primarybutton{
  @apply
  bg-background
  hover:text-text 
  hover:bg-primary 
  p-3
  rounded-full
  transition-colors
  dark:hover:text-text-inverse
}

.animationbutton {
  @apply
    bg-background
    hover:text-accent 
    hover:bg-primary 
    p-3
    rounded-full
    transition-colors
    dark:hover:text-text-inverse;
}
@layer components {

  .pixelbutton {
    @apply inline-flex items-center justify-center gap-2
           px-5 py-3 m-1 font-bit
           rounded-md cursor-pointer 
           transition-all duration-100 ease-in-out
           w-auto select-none relative;

    background-color: var(--background);
    color: var(--text);
    border: none; 
    
    box-shadow: 
      /* CLAVE: Borde exterior simulado pixelado (múltiples escalones de 1px) */
      0 0 0 1px var(--text), 
      1px 1px 0 1px var(--text), /* Incrementamos el 'spread' a 1px para grosor */
      2px 2px 0 1px var(--text),
      3px 3px 0 1px var(--text),
      
      /* CLAVE: Sombra de Profundidad 3D final (más pronunciada) */
      4px 4px 0 var(--text);
  }

  /* ESTADO HOVER: El botón se eleva */
  .pixelbutton:hover {
    background-color: var(--secondary-hover);
    transform: translate(-2px, -2px);
    
    box-shadow: 
      /* Borde pixelado (mantenemos el patrón) */
      0 0 0 1px var(--text), 
      1px 1px 0 1px var(--text),
      2px 2px 0 1px var(--text),
      3px 3px 0 1px var(--text),

      /* Sombra de profundidad más grande (simula que se eleva) */
      6px 6px 0 var(--text); 
  }

  /* ESTADO ACTIVE: El botón se "presiona" */
  .pixelbutton:active {
    /* Mueve el botón a la posición de la sombra (4px, 4px) */
    transform: translate(4px, 4px);
    
    /* Mantenemos solo el primer 'escalón' del borde para un look de marco hundido */
    box-shadow: 
      0 0 0 1px var(--text),
      1px 1px 0 1px var(--text); 
  }
  
  /* ESTADO FOCUS: El borde azul claro (sin cambios) */
  .pixelbutton:focus-visible {
    outline: 2px solid var(--focus-outline);
    outline-offset: 3px;
  }
  .pixelbutton2 {
    @apply  
           px-5 py-3 m-1 font-bit
           rounded-md cursor-pointer 
           transition-all duration-100 ease-in-out
           w-auto select-none relative;

    background-color: var(--background);
    color: var(--text);
    border: none; 
    
    box-shadow: 
      /* CLAVE: Borde exterior simulado pixelado (múltiples escalones de 1px) */
      0 0 0 1px var(--text), 
      1px 1px 0 1px var(--text), /* Incrementamos el 'spread' a 1px para grosor */
      2px 2px 0 1px var(--text),
      3px 3px 0 1px var(--text),
      
      /* CLAVE: Sombra de Profundidad 3D final (más pronunciada) */
      4px 4px 0 var(--text);
  }

  /* ESTADO HOVER: El botón se eleva */
  .pixelbutton2:hover {
    transform: translate(-2px, -2px);
    
    box-shadow: 
      /* Borde pixelado (mantenemos el patrón) */
      0 0 0 1px var(--text), 
      1px 1px 0 1px var(--text),
      2px 2px 0 1px var(--text),
      3px 3px 0 1px var(--text),

      /* Sombra de profundidad más grande (simula que se eleva) */
      6px 6px 0 var(--text); 
  }

  /* ESTADO ACTIVE: El botón se "presiona" */
  .pixelbutton2:active {
    /* Mueve el botón a la posición de la sombra (4px, 4px) */
    transform: translate(4px, 4px);
    
    /* Mantenemos solo el primer 'escalón' del borde para un look de marco hundido */
    box-shadow: 
      0 0 0 1px var(--text),
      1px 1px 0 1px var(--text); 
  }
  
  /* ESTADO FOCUS: El borde azul claro (sin cambios) */
  .pixelbutton2:focus-visible {
    outline: 2px solid var(--focus-outline);
    outline-offset: 3px;
  }
  .pixelbutton3 {
    @apply  
           px-5 py-3 m-1 font-bit
           rounded-md 
           transition-all duration-100 ease-in-out
           w-auto select-none relative;

    background-color: var(--background);
    color: var(--text);
    border: none; 
    
    box-shadow: 
      /* CLAVE: Borde exterior simulado pixelado (múltiples escalones de 1px) */
      0 0 0 1px var(--secondary-hover), 
      1px 1px 0 1px var(--secondary-hover), /* Incrementamos el 'spread' a 1px para grosor */
      2px 2px 0 1px var(--secondary-hover),
      3px 3px 0 1px var(--secondary-hover),
      
      /* CLAVE: Sombra de Profundidad 3D final (más pronunciada) */
      4px 4px 0 var(--secondary-hover);
  }

}



.toggle-scene {
  height: 50vmin;
  position: absolute;
  overflow: visible;
}

.toggle-scene__cord {
  stroke: var(--cord);
  cursor: move;
  display: none;
}

.toggle-scene__cords path:nth-of-type(1) {
  display: block;
}

.toggle-scene__cord-end {
  stroke: var(--cord);
  fill: var(--cord);
}

.toggle-scene__dummy-cord {
  stroke-width: 6;
  stroke: var(--cord);
}


.swiper-slide {
  transition: transform 0.3s ease;
}
.swiper-slide:hover {
  transform: scale(1.03);

}.mwg_effect000 .medias {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap: 10px;
  padding: 40px 20px;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.mwg_effect000 .media img {
  width: 100%;
  height: 100%;
  max-height: 100px;
  object-fit: cover;
  border-radius: 4px;
  transition: transform 0.2s ease;
}

.mwg_effect000 .media:hover img {
  transform: scale(1.05);
  cursor: pointer;
}
.modal-backdrop {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.75);
  display: grid;
  place-items: center;
  z-index: 1000;
}

.modal-content {
  background: #111;
  padding: 20px;
  border-radius: 12px;
  max-width: 90vw;
  max-height: 90vh;
  overflow: auto;
  color: white;
  text-align: center;
}

.modal-content img {
  max-width: 100%;
  max-height: 70vh;
  border-radius: 8px;
  margin-bottom: 10px;
}






.overlay {
  transition: background-color 0.3s, opacity 0.3s;
  position: absolute;
  display: block;
  width: 110vw;
  height: 110vh;
  z-index: 2;
  pointer-events: none;
  opacity: 0.75;
  background-color: #081020;
  mix-blend-mode: darken;
}




#cursor {
  position: fixed;
  top: 0;
  left: 0;
  width: 10px;
  height: 10px;
  background-color: #26c08c;
  border-radius: 50%;
  pointer-events: none;
  z-index: 10000;
  transition: transform 0.05s ease-out; /* Una transición muy rápida solo para suavizar */
}

#cursor-border {
  --size: 70px;
  position: fixed;
  top: 0;
  left: 0;
  width: var(--size);
  height: var(--size);
  border-radius: 50%;
  pointer-events: none;
  z-index: 9999;
  /* SOLO TRANSICIONES DE TAMAÑO Y COLOR. Quitamos top/left */
  transition: width 0.3s ease-out, height 0.3s ease-out, background-color 0.3s ease-out, mix-blend-mode 0.3s ease-out;
  background: radial-gradient(circle, #3ed9a6 10%, rgba(255, 255, 255, 0) 60%);
}
.control-btn {
  @apply flex flex-row inline-flex items-center justify-center px-4 py-2 border rounded-md text-sm font-medium transition-colors duration-200 
         bg-transparent dark:bg-transparent 
         text-text
      cursor-pointer whitespace-nowrap font-bit; 
}
.control-btn:hover:not(:disabled) {
  @apply bg-[#e0e0e040] dark:bg-[#44444440]; 
}
.control-btn:focus-visible {
  @apply outline-none ring-2 ring-[#9e99f8] ring-offset-2 dark:ring-offset-[#1a1a1a];
}
/* ================================================================== */
/* CSS COMPLETO Y ACTUALIZADO MENU                                    */
/* ================================================================== */

.gooey-sidebar {
  position: fixed;
  top: 2rem;
  left: 1.5rem;
  z-index: 100; 
  display: flex;
  flex-direction: column;
  align-items: center;
}

.menu-open {
  display: none; 
}

/* BOTÓN PRINCIPAL DEL MENÚ */
.menu-open-button {
  background: var(--text-inverse);
  border: 2px solid var(--accent);
  border-radius: 50%;
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative; 
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); 
  color: var(--accent);
}

.menu-open-button:hover {
  background: var(--accent);
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.15); 
  color: var(--text-inverse); 
}

.menu-open-button .hamburger-icon,
.menu-open-button .close-icon {
  position: absolute; 
  width: 28px; 
  height: 28px;
  stroke: currentColor; 
  transition: opacity 0.3s ease, transform 0.3s ease; 
}

.menu-open-button .hamburger-icon {
  opacity: 1;
  transform: rotate(0deg) scale(1);
}

.menu-open-button .close-icon {
  opacity: 0;
  transform: rotate(-90deg) scale(0.8); 
}

.menu-open:checked + .menu-open-button .hamburger-icon {
  opacity: 0;
  transform: rotate(90deg) scale(0.8); 
}

.menu-open:checked + .menu-open-button .close-icon {
  opacity: 1;
  transform: rotate(0deg) scale(1); 
}

.menu-open:checked + .menu-open-button {
  background: var(--accent);
  color: var(--text-inverse);
}


.menu-item {
  background: var(--text-inverse);
  border: 2px solid var(--accent);
  color: var(--accent);
  border-radius: 32px; 
  width: 80px;
  height: 85px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: absolute; 
  top: 0;
  left: 0;
  text-decoration: none;
  font-size: 0.8rem;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); 
  
  opacity: 0; 
  pointer-events: none;
  z-index: -1; 
  
  transition: transform 0.4s ease, 
              background 0.3s, 
              color 0.3s, 
              box-shadow 0.3s ease, 
              opacity 0.3s ease;
}

.menu-open:checked ~ .menu-item {
  opacity: 1;
  pointer-events: auto; 
  z-index: 1;
}

.menu-item .icon {
  display: flex; 
  justify-content: center;
  align-items: center;
}


.menu-item .label {
  margin-top: 4px;
  font-weight: 500;
  color: inherit; 
}

.menu-item:hover {
  background: var(--accent);
  color: var(--text);
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.15); 
}

.menu-item.active {
  background: var(--accent);
  color: var(--text);
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.15); 
}

@media (max-width: 768px) {
  .menu-item {
    width: 70px;
    height: 75px;
  }
  .menu-item .label {
    font-size: 0.75rem;
  }
}

/* ================================================================== */
/* LÓGICA RESPONSIVE                                                  */
/* ================================================================== */

.desktop-sidebar {
    display: none;
}

@media (min-width: 1024px) {
    .gooey-sidebar { 
        display: none !important;
    }

    .desktop-sidebar {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        
        position: fixed;
        top: 25vh; 
        left: 2rem;
        z-index: 40; 
        
        padding: 0;
        margin: 0;
        list-style: none;
        
        gap: 0.75rem; 
    }

    .desktop-sidebar a {
        display: flex;
        align-items: center; 
        text-decoration: none;
        color: var(--text); 
    }
}